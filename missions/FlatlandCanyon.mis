// DisplayName = Flatland Canyon
// MissionTypes = Construction Infection
//--- MISSION QUOTE BEGIN ---
// Life is but a dream
// - Spike
//
//<color:008B8B>Map by Riavan
//Dedicated to Xeno
//--- MISSION QUOTE END ---

//--- MISSION STRING BEGIN ---
//Serverside! No download required!
//--- MISSION STRING END ---

//--- OBJECT WRITE BEGIN ---
new SimGroup(MissionGroup) {

	cdTrack = "2";
	CTF_timeLimit = "25";
	CTF_scoreLimit = "6";
	musicTrack = "lush";
	powerCount = "0";

	new MissionArea(MissionArea) {
		area = "-1512 -1952 992 3872";
		flightCeiling = "500";
		flightCeilingRange = "40";
	};
	new Sun() {
		position = "-1196 -820 0";
		rotation = "1 0 0 0";
		scale = "1 1 1";
		direction = "0.57735 0.57735 -0.57735";
		color = "0.600000 0.600000 0.600000 1.000000";
		ambient = "0.600000 0.600000 0.650000 1.000000";
		texture[0] = "special/sunFlare";
		texture[1] = "special/sunFlare02";
		texture[2] = "special/LensFlare/flare01";
		texture[3] = "special/LensFlare/flare02";
		texture[4] = "special/LensFlare/flare03";
		lensFlareScale = "0.7";
		lensFlareIntensity = "1";
		frontFlareSize = "300";
		backFlareSize = "450";
		flareColor = "1.000000 1.000000 1.000000 1.000000";

		locked = "true";
	};
	new TerrainBlock(Terrain) {
		rotation = "1 0 0 0";
		scale = "1 1 1";
		detailTexture = "details/lushdet2";
		terrainFile = "PhasmaDust.ter";
		squareSize = "8";

		position = "-1024 -1024 0";
	};
	new NavigationGraph(NavGraph) {
		conjoinAngleDev = "45";
		cullDensity = "0.3";
		customArea = "0 0 0 0";

		coverage = "0";
		position = "0 0 0 1";
		YDimOverSize = "0";
		XDimOverSize = "0";
		locked = "true";
		rotation = "0 0 0 0";
		GraphFile = "Lakefront.nav";
		conjoinBowlDev = "20";
		scale = "1 1 1";
	};
	new Sky(Sky) {
		position = "-1196 -820 0";
		rotation = "1 0 0 0";
		scale = "1 1 1";
		cloudHeightPer[0] = "0.1";
		cloudHeightPer[1] = "0.25";
		cloudHeightPer[2] = "0.199973";
		cloudSpeed1 = "0.01";
		cloudSpeed2 = "0.02";
		cloudSpeed3 = "0.03";
		visibleDistance = "1000";
		useSkyTextures = "1";
		renderBottomTexture = "0";
		SkySolidColor = "0.490000 0.490000 0.490000 0.000000";
		fogDistance = "800";
		fogColor = "0.900000 0.900000 0.920000 1.000000";
		fogVolume1 = "0 0 0";
		fogVolume2 = "0 0 0";
		fogVolume3 = "0 0 0";
		materialList = "SOM_TR2_WinterBlue.dml";
		windVelocity = "1 0 0";
		windEffectPrecipitation = "0";
		fogVolumeColor1 = "128.000000 128.000000 128.000000 0.000000";
		fogVolumeColor2 = "128.000000 128.000000 128.000000 -198748244414614883000000000000000000000.000000";
		fogVolumeColor3 = "128.000000 128.000000 128.000000 -222768174765569861000000000000000000000.000000";
		high_visibleDistance = "-1";
		high_fogDistance = "-1";
		high_fogVolume1 = "-1 3.27833e-28 3148.48";
		high_fogVolume2 = "-1 2.24208e-44 2.51673e-42";
		high_fogVolume3 = "-1 7.74718e+31 1.49413e-07";

		cloudSpeed0 = "0.000000 0.000000";
	};
	new SimGroup(Teams) {

		powerCount = "0";

		new SimGroup(Team1) {

			powerCount = "0";

			new SimGroup(spawnspheres) {

				powerCount = "0";

				new SpawnSphere() {
					position = "-1023.13 -66.5454 22.7821";
					rotation = "1 0 0 0";
					scale = "1 1 1";
					dataBlock = "SpawnSphereMarker";
					lockCount = "0";
					homingCount = "0";
					radius = "50";
					sphereWeight = "100";
					indoorWeight = "100";
					outdoorWeight = "100";
				};
			};
			new SimGroup(base) {

				powerCount = "1";

				new StaticShape() {
					position = "-1014.43 -65.8246 7.98396";
					rotation = "1 0 0 0";
					scale = "1 1 1";
					dataBlock = "StationVehiclePad";
					lockCount = "0";
					homingCount = "0";

					Ready = "1";
					team = "1";
					station = "4812";
					Target = "33";
				};
				new StaticShape() {
					position = "-1025.05 -50.3477 11.2342";
					rotation = "1 0 0 0";
					scale = "1 1 1";
					dataBlock = "StationInventory";
					lockCount = "0";
					homingCount = "0";

					inUse = "Down";
					Trigger = "4789";
					team = "1";
					notReady = "1";
					Target = "34";
				};
				new StaticShape() {
					position = "-1005.25 -51.5687 -0.142809";
					rotation = "1 0 0 0";
					scale = "1 1 1";
					dataBlock = "GeneratorLarge";
					lockCount = "0";
					homingCount = "0";

					team = "1";
					Target = "35";
				};
			};
		};
		new SimGroup(team0) {

			powerCount = "0";
		};
	};
	new SimGroup(ObserverDropPoints) {

		powerCount = "0";

		new Camera(Cam1) {
			position = "-857.287 -171.935 71.6891";
			rotation = "0.375856 0.206574 -0.90336 62.6331";
			scale = "1 1 1";
			dataBlock = "Observer";
			lockCount = "0";
			homingCount = "0";

			team = "0";
		};
	};
	new SimGroup(Ambiance) {

		powerCount = "0";

		new AudioEmitter() {
			position = "-336.483 345.97 227.94";
			rotation = "1 0 0 0";
			scale = "1 1 1";
			fileName = "fx/environment/frog1.wav";
			useProfileDescription = "0";
			outsideAmbient = "1";
			volume = "1";
			isLooping = "1";
			is3D = "1";
			minDistance = "45";
			maxDistance = "2240";
			coneInsideAngle = "360";
			coneOutsideAngle = "360";
			coneOutsideVolume = "1";
			coneVector = "0 0 1";
			loopCount = "-1";
			minLoopGap = "0";
			maxLoopGap = "0";
			type = "EffectAudioType";

			locked = "true";
		};
		new AudioEmitter() {
			position = "-464.05 -493.691 224.89";
			rotation = "1 0 0 0";
			scale = "1 1 1";
			fileName = "fx/environment/bird_echo2.wav";
			useProfileDescription = "0";
			outsideAmbient = "1";
			volume = "1";
			isLooping = "1";
			is3D = "1";
			minDistance = "35";
			maxDistance = "2240";
			coneInsideAngle = "360";
			coneOutsideAngle = "360";
			coneOutsideVolume = "1";
			coneVector = "0 0 1";
			loopCount = "-1";
			minLoopGap = "0";
			maxLoopGap = "0";
			type = "EffectAudioType";

			locked = "true";
		};
	};
	new SimGroup(RandomOrganics) {

		powerCount = "0";

		new SimGroup(Addition1BELgTree18) {

			powerCount = "0";
		};
		new SimGroup(Addition1BEPlant1) {

			powerCount = "0";
		};
	};
	new SimGroup() {

		powerCount = "0";
	};
	new FileObject() {
	};
	new FileObject() {
	};
	new SimGroup() {

		powerCount = "0";
	};
	new SimGroup() {

		powerCount = "0";
	};
	new SimGroup() {

		powerCount = "0";
	};
	new FileObject() {
	};
	new FileObject() {
	};
	new FileObject() {
	};
	new FileObject() {
	};
	new SimGroup() {

		powerCount = "0";
	};
};
//--- OBJECT WRITE END ---

// Makes sure that the original values are maintained (for modified servers)

$DefaultVehicleRespawnTime = $VehicleRespawnTime;
$DefaultVehicleMax[ScoutVehicle] = $VehicleMax[ScoutVehicle];
$DefaultVehicleMax[AssaultVehicle] = $VehicleMax[AssaultVehicle];
$DefaultVehicleMax[MobileBaseVehicle] = $VehicleMax[MobileBaseVehicle];
$DefaultVehicleMax[ScoutFlyer] = $VehicleMax[ScoutFlyer];
$DefaultVehicleMax[BomberFlyer] = $VehicleMax[BomberFlyer];
$DefaultVehicleMax[HAPCFlyer] = $VehicleMax[HAPCFlyer];

// Set the values the way you want them!
$VehicleRespawnTime = 15000; // 15 seconds to respawn placed vehicles
$Vehiclemax[ScoutVehicle]     = 8; // Wildcat Grav Cycle
$VehicleMax[AssaultVehicle]   = 0; // Beowulf Assault Tank
$VehicleMax[MobileBaseVehicle]  = 0; // MPB Mobile Base
$VehicleMax[ScoutFlyer]       = 8; // Shrike Turbograv
$VehicleMax[BomberFlyer]      = 2; // Thundersword Bomber
$VehicleMax[HAPCFlyer]        = 2; // Havoc Heavy Transport

package ShatteredFaith {

function DefaultGame::gameOver(%game)
{
  // Put the values back the way they were
  $VehicleRespawnTime = $DefaultVehicleRespawnTime;
  $VehicleMax[ScoutVehicle] = $DefaultVehicleMax[ScoutVehicle];
  $VehicleMax[AssaultVehicle] = $DefaultVehicleMax[AssaultVehicle];
  $VehicleMax[MobileBaseVehicle] = $DefaultVehicleMax[MobileBaseVehicle];
  $VehicleMax[ScoutFlyer] = $DefaultVehicleMax[ScoutFlyer];
  $VehicleMax[BomberFlyer] = $DefaultVehicleMax[BomberFlyer];
  $VehicleMax[HAPCFlyer] = $DefaultVehicleMax[HAPCFlyer];
  Parent::gameOver(%game);
  deactivatepackage(ShatteredFaith);
}

};

activatepackage(ShatteredFaith);
